module clk

import core::{Reader, Writer, Error}

/// Time point in milliseconds since epoch.
type TimePoint = varuint;

/// Duration in milliseconds.
type Duration = varuint;

type Tick = varuint;

variant TimeKind {
    Ticks,
    Absolute { epoch: TimePoint },
    SizedTicks { epoch: TimePoint, tickResolution: Duration },
}

component {
    parameters {
        timeKind: TimeKind,
        time: Tick,
    }

    statuses {
        [time, 0, true]: {time},
        [kind, 0, false]: {timeKind},
    }

    impl {
        fn init()
        fn tick()
        fn getTime() -> Tick
    }

    commands {
    }
}
