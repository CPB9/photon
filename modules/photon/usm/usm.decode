module usm

enum State {
    Empty       = 0,
    Proccessing = 1,
    Executed    = 2,
    NotExecuted = 4
}

enum Frames {
    BuildStateFrame = 1,
    SystemInfoFrame,
    CurrentAppFrame,
    BuildLogFrame
}

struct BuildState {
    unpackState : State,
    buildState : State,
    installState : State,
    uninstallState : State
}

type Str = &[char;255];
type StrList = &[char;768];

struct SystemInfo {
    appsList : StrList,
}

enum ApplicationState {
    NotRunning = 0,
    Starting = 1,
    Running = 2
}

struct CurrentApplication {
    appName : Str,
    appState : ApplicationState,
    appId : varuint
}

component {
    parameters {
        buildState: BuildState,
        systemInfo: SystemInfo,
        currentApp: CurrentApplication,
        buildLog:   StrList
    }

    statuses {
        [buildState, 1, false]: {buildState},
        [systemInfo, 1, false]: {systemInfo},
        [currentApp, 1, false]: {currentApp},
        [buildLog, 1, false]:   {buildLog}
    }

    events {
        [logMessage, true]: { level: u8, source: u8, text: StrList }
    }

    commands {
        fn requestStatus(statusCode: u8)

        fn getFile(fileId: varuint)
        fn unpackFile()
        fn buildTarget()
        fn installTarget()

        fn uninstallApplication(appName : Str)

        fn runApplication(appName : Str)
        fn stopApplication(appName : Str)
        fn killApplication(appName : Str)
    }

    impl {
        fn init()
        fn tick()
    }
}
