module test

// struct format
//
// struct Name {
//     paramName1: typeName1,
//     paramName2: typeName2,
//     ...
//     paramNameN: typeNameN,
// }

struct ParamStruct {
    parama: u8,
    paramb: f64,
}

struct CmdStruct {
    param1: u8,
    param2: u16,
    param3: u32,
    param4: u64,
    param5: i8,
    param6: i16,
    param7: i32,
    param8: i64,
    param9: ParamStruct,
    param10: f32,
    param11: f64,
}

component {
    parameters {
        param1: u8,
        param2: u16,
        param3: u32,
        param4: u64,
        param5: i8,
        param6: i16,
        param7: i32,
        param8: i64,
        param9: ParamStruct,
        param10: f32,
        param11: f64,
    }

    statuses {
        [0, 0, true]: {param1, param2, param3, param4},
        [3, 0, true]: {param5, param6, param7, param8},
        [4, 0, true]: {param9, param10, param11},
    }

    impl {
        fn init()
    }

    commands {
        fn setParam1(p: u8)
        fn setParam2(p: u16)
        fn setParam3(p: u32)
        fn setParam4(p: u64)
        fn setParam5(p: i8)
        fn setParam6(p: i16)
        fn setParam7(p: i32)
        fn setParam8(p: i64)
        fn setParam9(p: ParamStruct)
        fn setParam10(p: f32)
        fn setParam11(p: f64)
        fn setAllParams(p1: u8, p2: u16, p3: u32, p4: u64, p5: i8, p6: i16, p7: i32, p8: i64, p9: ParamStruct, p10: f32, p11: f64)
        fn setAllParamsStruct(s: CmdStruct)
        fn incAllParams()
        fn decAllParams()
    }
}
